#include "stm32f4xx.h"


#define GPIOAEN			(1U<<0)
#define UART2			(1U<<17)
#define SYS_FREQ		16000000

static void uart_set_baudrate(USART_TypeDef *USARTx,uint32_t PeriphClk,uint32_t BaudRate);
static uint16_t compute_uart_bd(uint32_t PeriphClk,uint32_t BaudRate);

int main(void){
	while(1){

	}
}

void uar2_tx_init(void){
	/*******************Configure uart gpio pin******************/
	/*Enable clock access to GPIOA*/
	RCC->AHB1ENR |= GPIOAEN;
	/*Set PA2 Mode to Alternate Function Mode*/
	GPIOA->MODER &=~ (1U<<4);
	GPIOA->MODER |= (1U<<5);
	/*Set PA2 Alternate function type to UART_TX (AF07)*/
	GPIOA->AFR[0] |= (1U<<8);
	GPIOA->AFR[0] |= (1U<<9);
	GPIOA->AFR[0] |= (1U<<10);
	GPIOA->AFR[0] &=~ (1U<<11);
	/*Configure Uart Module*/
	/*Enable clock access to UART*/
	RCC->APB1ENR |= UART2;
	/*configure baudrate*/
	uart_set_baudrate(USART2,);
	/*Enable Transfer Direction*/
	/*Enable UART Module*/

}

static void uart_set_baudrate(USART_TypeDef *USARTx,uint32_t PeriphClk,uint32_t BaudRate){
	USARTx->BRR = compute_uart_bd(PeriphClk,BaudRate);
}


static uint16_t compute_uart_bd(uint32_t PeriphClk,uint32_t BaudRate){
	return (PeriphClk ((BaudRate/2U)/BaudRate));
}
